<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>verilator on Project F: FPGA Dev</title>
    <link>https://projectf.io/tags/verilator/</link>
    <description>Recent content in verilator on Project F: FPGA Dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>Â©2022 Will Green, Project F</copyright>
    <lastBuildDate>Fri, 11 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://projectf.io/tags/verilator/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Verilog Simulation with Verilator and SDL</title>
      <link>https://projectf.io/posts/verilog-sim-verilator-sdl/</link>
      <pubDate>Fri, 11 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://projectf.io/posts/verilog-sim-verilator-sdl/</guid>
      <description>It can be challenging to test your FPGA or ASIC graphics designs. You can perform low-level behavioural simulations and examine waveforms, but you also need to verify how the video output will appear on the screen.
By combining Verilator and SDL, you can build Verilog simulations that let you see your design on your computer. The thought of creating a graphical simulation can be intimidating, but it&amp;rsquo;s surprisingly simple: you&amp;rsquo;ll have your first simulation running in under an hour.</description>
    </item>
    
    <item>
      <title>Verilog Lint with Verilator</title>
      <link>https://projectf.io/posts/verilog-lint-with-verilator/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://projectf.io/posts/verilog-lint-with-verilator/</guid>
      <description>Hardware design can be unforgiving, so it pays to use any advantage you can get. Verilator is a Verilog simulator and C++ compiler that also supports linting: statically analysing your designs for issues. Not only can Verilator spot problems your synthesis tool might overlook, but it also runs quickly. Verilator is also great for graphics simulation with SDL. This post was last updated in July 2021.
Get in touch: GitHub Issues, 1BitSquared Discord, @WillFlux (Mastodon), @WillFlux (Twitter)</description>
    </item>
    
    <item>
      <title>iCE40 FPGA Toolchain on Linux</title>
      <link>https://projectf.io/posts/building-ice40-fpga-toolchain/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://projectf.io/posts/building-ice40-fpga-toolchain/</guid>
      <description>Since I tested FPGA development tools on Ubuntu 20.04, there have been requests for more posts on FPGA tooling. In this post, I provide a quick guide to building an open-source FPGA toolchain for iCE40 boards, such as iCEBreaker. I plan to cover ECP5 FPGAs in a future version. This post was last updated in February 2022.
This guide is designed for Ubuntu or Pop!_OS 20.04, but should be straightforward to adjust to your own distro.</description>
    </item>
    
  </channel>
</rss>
