<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>asm on Project F</title><link>https://projectf.io/tags/asm/</link><description>Recent content in asm on Project F</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 14 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://projectf.io/tags/asm/index.xml" rel="self" type="application/rss+xml"/><item><title>RISC-V Assembler: Load Store</title><link>https://projectf.io/posts/riscv-load-store/</link><pubDate>Wed, 14 Feb 2024 00:00:00 +0000</pubDate><guid>https://projectf.io/posts/riscv-load-store/</guid><description>This post looks at RISC-V load and store instructions, such as lw, sw, and lbu. We&amp;rsquo;ll also cover memory alignment, addressing modes, and loading symbol addresses. These instructions are included in RV32I, the base integer instruction set. New to the series? Check out the first part on arithmetic instructions.
In the last few years, we&amp;rsquo;ve seen an explosion of RISC-V CPU designs, especially on FPGA. Thankfully, RISC-V is ideal for assembly programming with its compact, easy-to-learn instruction set.</description></item><item><title>RISC-V Assembler: Shift</title><link>https://projectf.io/posts/riscv-shift/</link><pubDate>Tue, 30 Jan 2024 00:00:00 +0000</pubDate><guid>https://projectf.io/posts/riscv-shift/</guid><description>In this post we look at RISC-V shift instructions, such as sll and srai. These instructions are included in RV32I, the base integer instruction set. New to the series? Check out the first part on arithmetic instructions.
In the last few years, we&amp;rsquo;ve seen an explosion of RISC-V CPU designs, especially on FPGA. Thankfully, RISC-V is ideal for assembly programming with its compact, easy-to-learn instruction set. This series will help you learn and understand 32-bit RISC-V instructions (RV32) and the RISC-V ABI.</description></item><item><title>RISC-V Assembler: Logical</title><link>https://projectf.io/posts/riscv-logical/</link><pubDate>Mon, 29 Jan 2024 00:00:00 +0000</pubDate><guid>https://projectf.io/posts/riscv-logical/</guid><description>In this post we look at RISC-V logical instructions, such as and and xori. These instructions are included in RV32I, the base integer instruction set. New to the series? Check out the first part on arithmetic instructions.
In the last few years, we&amp;rsquo;ve seen an explosion of RISC-V CPU designs, especially on FPGA. Thankfully, RISC-V is ideal for assembly programming with its compact, easy-to-learn instruction set. This series will help you learn and understand 32-bit RISC-V instructions (RV32) and the RISC-V ABI.</description></item><item><title>RISC-V Assembler: Arithmetic</title><link>https://projectf.io/posts/riscv-arithmetic/</link><pubDate>Mon, 15 Jan 2024 00:00:00 +0000</pubDate><guid>https://projectf.io/posts/riscv-arithmetic/</guid><description>&amp;ldquo;RISC architecture is going to change everything.&amp;rdquo; â€” Acid Burn
In the last few years, we&amp;rsquo;ve seen an explosion of RISC-V CPU designs, especially on FPGA. Thankfully, RISC-V is ideal for assembly programming with its compact, easy-to-learn instruction set. This series will help you learn and understand 32-bit RISC-V instructions (RV32) and the RISC-V ABI. The first part looks at load immediate, addition, and subtraction. We&amp;rsquo;ll also cover sign extension and pseudoinstructions.</description></item></channel></rss>