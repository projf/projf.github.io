<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nexys-Video on Project F</title><link>https://projectf.io/tags/nexys-video/</link><description>Recent content in Nexys-Video on Project F</description><generator>Hugo</generator><language>en-gb</language><lastBuildDate>Fri, 27 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://projectf.io/tags/nexys-video/index.xml" rel="self" type="application/rss+xml"/><item><title>Mandelbrot in Verilog</title><link>https://projectf.io/posts/mandelbrot-verilog/</link><pubDate>Tue, 07 Mar 2023 00:00:00 +0000</pubDate><guid>https://projectf.io/posts/mandelbrot-verilog/</guid><description>This FPGA demo uses fixed-point multiplication and a small framebuffer to render the Mandelbrot set. You can navigate around the complex plane using buttons on your dev board.</description></item><item><title>Racing the Beam</title><link>https://projectf.io/posts/racing-the-beam/</link><pubDate>Sat, 12 Mar 2022 00:00:00 +0000</pubDate><guid>https://projectf.io/posts/racing-the-beam/</guid><description>Welcome back to &lt;em>Exploring FPGA Graphics&lt;/em>. Last time, we got an introduction to FPGA graphics; let&amp;rsquo;s put our new graphical skills to work with some simple demo effects. I hope these examples inspire you to create your own effects and improve your hardware design skills.</description></item><item><title>Hello Nexys - Part 2</title><link>https://projectf.io/posts/hello-nexys-2/</link><pubDate>Thu, 11 Feb 2021 00:00:00 +0000</pubDate><guid>https://projectf.io/posts/hello-nexys-2/</guid><description>Welcome back to our two-part FPGA tutorial with &lt;strong>SystemVerilog&lt;/strong> and the &lt;strong>Digilent Nexys Video&lt;/strong>. In part two, we&amp;rsquo;re going to learn about clocks and counting. Along the way, we&amp;rsquo;ll cover maintaining state with flip-flops, timing things with clock dividers, creating our first Verilog module, and controlling LEDs with pulse width modulation.</description></item><item><title>Hello Nexys - Part 1</title><link>https://projectf.io/posts/hello-nexys-1/</link><pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate><guid>https://projectf.io/posts/hello-nexys-1/</guid><description>This two-part tutorial provides a quick introduction to FPGA development with &lt;strong>SystemVerilog&lt;/strong> and the &lt;strong>Digilent Nexys Video&lt;/strong> board. No prior experience of FPGA development is required, but basic knowledge of programming concepts is assumed. If you can write a simple program with Python or JavaScript, you shouldn&amp;rsquo;t have any trouble.</description></item><item><title>Beginning FPGA Graphics</title><link>https://projectf.io/posts/fpga-graphics/</link><pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate><guid>https://projectf.io/posts/fpga-graphics/</guid><description>Welcome to &lt;em>Exploring FPGA Graphics&lt;/em>. In this series, we learn about graphics at the hardware level and get a feel for the power of FPGAs. We&amp;rsquo;ll learn how screens work, play Pong, create starfields and sprites, paint Michelangelo&amp;rsquo;s David, draw lines and triangles, and animate characters and shapes. Along the way, you&amp;rsquo;ll experience a range of designs and techniques, from memory and finite state machines to crossing clock domains and translating C algorithms into Verilog.</description></item></channel></rss>