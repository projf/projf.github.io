<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vivado on Project F</title>
    <link>https://projectf.io/tags/vivado/</link>
    <description>Recent content in Vivado on Project F</description>
    <generator>Hugo</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 20 Apr 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://projectf.io/tags/vivado/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vivado Tcl Build Script</title>
      <link>https://projectf.io/posts/vivado-tcl-build-script/</link>
      <pubDate>Thu, 20 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://projectf.io/posts/vivado-tcl-build-script/</guid>
      <description>Are you tired of firing up the Vivado GUI to build an FPGA project? You can automate your Xilinx FPGA build using a little Tcl. And you don&amp;rsquo;t even need to know any Tcl. Building your design from a script also comes in handy for continuous integration (CI) and Makefiles. Plus, I&amp;rsquo;ll show you how to quickly program your dev board with openFPGALoader.</description>
    </item>
    <item>
      <title>Hello Nexys - Part 1</title>
      <link>https://projectf.io/posts/hello-nexys-1/</link>
      <pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://projectf.io/posts/hello-nexys-1/</guid>
      <description>This two-part tutorial provides a quick introduction to FPGA development with &lt;strong&gt;SystemVerilog&lt;/strong&gt; and the &lt;strong&gt;Digilent Nexys Video&lt;/strong&gt; board. No prior experience of FPGA development is required, but basic knowledge of programming concepts is assumed. If you can write a simple program with Python or JavaScript, you shouldn&amp;rsquo;t have any trouble.</description>
    </item>
    <item>
      <title>Hello Arty - Part 1</title>
      <link>https://projectf.io/posts/hello-arty-1/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://projectf.io/posts/hello-arty-1/</guid>
      <description>This three-part tutorial provides a quick introduction to FPGA development with &lt;strong&gt;SystemVerilog&lt;/strong&gt; and the &lt;strong&gt;Digilent Arty A7&lt;/strong&gt; board. No prior experience of FPGA development is required, but basic knowledge of programming concepts is assumed. If you can write a simple program with Python or JavaScript, you shouldn&amp;rsquo;t have any trouble.</description>
    </item>
    <item>
      <title>Initialize Memory in Verilog</title>
      <link>https://projectf.io/posts/initialize-memory-in-verilog/</link>
      <pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://projectf.io/posts/initialize-memory-in-verilog/</guid>
      <description>It&amp;rsquo;s common for a simulation or firmware to need data loading into a memory array, ram, or rom. Fortunately, Verilog provides the &lt;strong&gt;&lt;code&gt;$readmemh&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;$readmemb&lt;/code&gt;&lt;/strong&gt; functions for this very purpose. Unfortunately, there is a dearth of good Verilog documentation online, so using them can be harder than it should be. This how to explains the syntax and provides plenty of examples, including how to do this in Yosys and Xilinx Vivado.</description>
    </item>
  </channel>
</rss>
