<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>memory on Project F</title><link>https://projectf.io/tags/memory/</link><description>Recent content in memory on Project F</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 14 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://projectf.io/tags/memory/index.xml" rel="self" type="application/rss+xml"/><item><title>RISC-V Assembler: Load Store</title><link>https://projectf.io/posts/riscv-load-store/</link><pubDate>Wed, 14 Feb 2024 00:00:00 +0000</pubDate><guid>https://projectf.io/posts/riscv-load-store/</guid><description>This post looks at RISC-V load and store instructions, such as lw, sw, and lbu. We&amp;rsquo;ll also cover memory alignment, addressing modes, and loading symbol addresses. These instructions are included in RV32I, the base integer instruction set. New to the series? Check out the first part on arithmetic instructions.
In the last few years, we&amp;rsquo;ve seen an explosion of RISC-V CPU designs, especially on FPGA. Thankfully, RISC-V is ideal for assembly programming with its compact, easy-to-learn instruction set.</description></item><item><title>SPRAM on iCE40 FPGA</title><link>https://projectf.io/posts/spram-ice40-fpga/</link><pubDate>Fri, 30 Jul 2021 00:00:00 +0000</pubDate><guid>https://projectf.io/posts/spram-ice40-fpga/</guid><description>The iCE40 UltraPlus distinguishes itself from the rest of the iCE40 FPGA family by including a relatively generous 1 Mb (128 KiB) of single port synchronous SRAM known as SPRAM. SPRAM blocks are much larger than BRAM but are limited to a single port and 16-bit data bus.
In this quick how to, we learn how to use SPRAM with Yosys and contrast it with Block RAM. If you want to learn more about other FPGA memory, see FPGA Memory Types.</description></item><item><title>FPGA Memory Types</title><link>https://projectf.io/posts/fpga-memory-types/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://projectf.io/posts/fpga-memory-types/</guid><description>Designing with FPGAs involves many types of memory, some familiar from other devices, but some that are specific to FPGAs. This how to gives a quick overview of the different flavours, together with their strengths and weaknesses, and some sample designs. This guide includes external memory types, such as SRAM and HBM, that are used in CPUs and GPUs, so much of what is said here is generally applicable, but the focus is on FPGAs.</description></item><item><title>Initialize Memory in Verilog</title><link>https://projectf.io/posts/initialize-memory-in-verilog/</link><pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate><guid>https://projectf.io/posts/initialize-memory-in-verilog/</guid><description>It&amp;rsquo;s common for a simulation or firmware to need data loading into a memory array, ram, or rom. Fortunately, Verilog provides the $readmemh and $readmemb functions for this very purpose. Unfortunately, there is a dearth of good Verilog documentation online, so using them can be harder than it should be. This how to explains the syntax and provides plenty of examples, including how to do this in Yosys and Xilinx Vivado.</description></item></channel></rss>